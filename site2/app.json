[{"name":"app.R","content":"library(shiny)\n\nlibrary(shiny)\nlibrary(ggplot2)\n\nui <- fluidPage(\n  titlePanel(\"T-Test and Mean Difference Significance\"),\n  sidebarLayout(\n    sidebarPanel(\n      numericInput(\"n\", \"Sample Size:\", value = 30, min = 10, max = 100),\n      numericInput(\"mean1\", \"Mean of Group 1:\", value = 0, step = 0.1),\n      numericInput(\"mean2\", \"Mean of Group 2:\", value = 0.5, step = 0.1),\n      numericInput(\"sd\", \"Standard Deviation:\", value = 1, min = 0.1, step = 0.1),\n      actionButton(\"generate\", \"Generate Data and Perform T-Test\")\n    ),\n    mainPanel(\n      plotOutput(\"histogram\"),\n      verbatimTextOutput(\"ttest_results\")\n    )\n  )\n)\n\nserver <- function(input, output) {\n  data <- reactiveVal(NULL)\n  \n  observeEvent(input$generate, {\n    set.seed(123)\n    group1 <- rnorm(input$n, mean = input$mean1, sd = input$sd)\n    group2 <- rnorm(input$n, mean = input$mean2, sd = input$sd)\n    data(data.frame(\n      value = c(group1, group2),\n      group = rep(c(\"Group 1\", \"Group 2\"), each = input$n)\n    ))\n  })\n  \n  output$histogram <- renderPlot({\n    req(data())\n    ggplot(data(), aes(x = value, fill = group)) +\n      geom_histogram(position = \"identity\", alpha = 0.5, bins = 30) +\n      labs(title = \"Distribution of Two Groups\",\n           x = \"Value\", y = \"Count\") +\n      theme_minimal()\n  })\n  \n  output$ttest_results <- renderPrint({\n    req(data())\n    t_test <- t.test(value ~ group, data = data())\n    cat(\"T-Test Results:\\n\\n\")\n    print(t_test)\n  })\n}\n\nshinyApp(ui = ui, server = server)\n","type":"text"},{"name":"DESCRIPTION","content":"Title: Hello Shiny!\nAuthor: RStudio, Inc.\nAuthorUrl: http://www.rstudio.com/\nLicense: MIT\nDisplayMode: Showcase\nTags: getting-started\nType: Shiny\n","type":"text"},{"name":"Readme.md","content":"This small Shiny application demonstrates Shiny's automatic UI updates. \n\nMove the *Number of bins* slider and notice how the `renderPlot` expression is automatically re-evaluated when its dependant, `input$bins`, changes, causing a histogram with a new number of bins to be rendered.\n","type":"text"}]
